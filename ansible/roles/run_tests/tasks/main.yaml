---
- name: Run build
  shell: |
    if [ {{verbose}} == "true" ]; then
      set -x
    fi

    # prepare the base dir
    mkdir -p {{drifter_home}}
    cd {{drifter_home}}

    # clone drifter from git; otherwise update
    if [ ! -e drifter ]; then
      git clone https://github.com/obsidiandynamics/drifter -b {{lib_branch}}
    else
      cd drifter
      git pull
      cd ..
    fi

    # clone target repo if it is not there; otherwise update
    if [ ! -e {{repo_name}} ]; then
      git clone {{target_repo}} -b {{target_branch}} {{repo_name}}
      cd {{repo_name}}
    else
      cd {{repo_name}}
      git fetch
      git checkout {{target_branch}}
      git pull
    fi

    # clean up artefacts from prior builds
    if [ -e build/looped/latest-timestamp ]; then
      rm build/looped/latest-timestamp
    fi
    if [ -e build/looped/latest.tgz ]; then
      rm build/looped/latest.tgz
    fi
    if [ -e build/looped/success ]; then
      rm build/looped/success
    fi

    # run the test and observe the error code
    loop_args_array=(`echo "{{loop_args}}" | sed 's/,/\n/g'`)
    ../drifter/loop.sh ${loop_args_array[@]}
    exit_code=$?
    
    mkdir -p build/looped
    cd build/looped
    if [ "$exit_code" == "0" ]; then
      # build succeeded: indicate as much
      touch success
    else
      # build failed: create a timestamp file and pack artefacts into a tarball for retrieval
      timestamp=`cat latest-timestamp`
      tar -zcf latest.tgz ${timestamp}
    fi
  become: true
  become_user: "{{ansible_user}}"
  ignore_errors: yes

- name: Retrieve artefacts
  fetch:
    src: "{{drifter_home}}/{{repo_name}}/build/looped/latest.tgz"
    dest: "../out/{{ansible_host}}-{{ansible_port}}/latest.tgz"
    flat: true
  become: true
  become_user: "{{ansible_user}}"

- name: Retrieve timestamp
  fetch:
    src: "{{drifter_home}}/{{repo_name}}/build/looped/latest-timestamp"
    dest: "../out/{{ansible_host}}-{{ansible_port}}/latest-timestamp"
    flat: true
  become: true
  become_user: "{{ansible_user}}"

- name: Check success status
  shell: |
    if [ ! -e {{drifter_home}}/{{repo_name}}/build/looped/success ]; then
      exit 1
    fi
  become: true
  become_user: "{{ansible_user}}"
 